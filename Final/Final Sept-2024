Final Plan Nuevo
12/09

1. escribir recr utilizando foldr

2. Sea  dup f x = f x x, demostrar usando las definiciones comunes de map y zipWith:
map . dup = dup . zipWith 

3. Sea tⓧr una abreviacion de not(t => not(r)). Demostrar utilizando deduccion natural que esta abreviacion se comporta igual a la conjuncion, es decir:
> a. Si Γ-> t y Γ-> r, entonces Γ-> tⓧr (Introduccion)
> b. Si Γ-> tⓧr, entonces Γ-> t (Eliminacion 1)
> c. Si Γ-> tⓧr, entonces Γ-> r (Eliminacion 2)

4. Escribir en prolog lo siguiente:
> a. subarbol(+A, -S). Devuelve todos los subarboles de A
> b. tieneSubarbolMayorPeso(+A, +N). Devuelve true si posee un subarbol cuyo peso es estrictamente mayor a N(el peso es la suma de los valores de los nodos del subarbol)
> c. subarbolDeMayorPeso(+A, -S). Devuelve todos los subarboles de mayor peso dentro de A.